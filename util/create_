import openai
import json

# Initialize OpenAI client
openai_client = openai.OpenAI(api_key = "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")  # Create client

def get_embedding(text, model="text-embedding-ada-002"):
    response = openai_client.embeddings.create(
        input=[text],  # Must be a list
        model=model
    )
    return response.data[0].embedding

# examlpe
#deck_text = "Gruul Broodscale deck with 4 Basking Broodscale, 4 Walking Ballista..."
#embedding = get_embedding(deck_text)
#print(embedding)

# Load JSON file
with open(f"MagicAnalytics\data\deck_json_all.json", "r") as file:
    data = json.load(file)  # Assuming the file contains a list of JSON objects

# Iterate through the list
compiled_data = []
count = 0
# Process each deck
for deck in data:
    deck_text = f"{deck['archetype']} deck by {deck['player_name']} (Rank {deck['rank']}, Record {deck['record']})\n"
    
    deck_text += "\nMainboard:\n"
    deck_text += "\n".join([f"{card['count']}x {card['name']} ({card['type']})" for card in deck["maindeck"]])
    
    deck_text += "\n\nSideboard:\n"
    deck_text += "\n".join([f"{card['count']}x {card['name']} ({card['type']})" for card in deck["sideboard"]])
    
    print(deck_text)

    
    embedding = get_embedding(deck_text)
    # create json
    compiled_data.append({
        "id": count,
        "archetype": deck["archetype"],
        "player_name": deck["player_name"],
        "rank": deck["rank"],
        "record": deck["record"],
        "embedding": embedding  # Store the embedding vector
    })

    count = count + 1


with open("compiled_decks.json", "w") as file:
    json.dump(compiled_data, file, indent=4)

print("JSON file saved successfully!")